// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Settings() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-4xl mx-auto\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"><h2 class=\"text-2xl font-semibold text-gray-900 dark:text-white mb-6\">Settings</h2><div class=\"space-y-8\"><!-- Appearance --><div><h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Appearance</h3><div class=\"space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Theme</label><div class=\"flex items-center space-x-4\"><button type=\"button\" onclick=\"setThemeAndUpdate('light')\" id=\"theme-light\" class=\"flex items-center px-4 py-2 rounded-lg border-2 transition-all duration-200\"><svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\" clip-rule=\"evenodd\"></path></svg> Light</button> <button type=\"button\" onclick=\"setThemeAndUpdate('dark')\" id=\"theme-dark\" class=\"flex items-center px-4 py-2 rounded-lg border-2 transition-all duration-200\"><svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"></path></svg> Dark</button></div></div></div></div><!-- Action Buttons --><div class=\"flex justify-end pt-6 border-t border-gray-200 dark:border-gray-700\"><button type=\"button\" onclick=\"window.location.href='/'\" class=\"bg-gray-200 hover:bg-gray-300 dark:bg-gray-600 dark:hover:bg-gray-500 text-gray-800 dark:text-white font-medium text-sm py-2 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-offset-2 dark:focus:ring-offset-gray-800\">Back to Downloads</button></div></div></div></div><script>\n\t\t// Initialize theme buttons when page loads\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t// Small delay to ensure global setTheme is available\n\t\t\tsetTimeout(updateThemeButtons, 100);\n\t\t});\n\t\t\n\t\t// Listen for theme changes from other parts of the app\n\t\twindow.addEventListener('themeChanged', function() {\n\t\t\tupdateThemeButtons();\n\t\t});\n\t\t\n\t\t// Use the global setTheme function and update buttons\n\t\tfunction setThemeAndUpdate(theme) {\n\t\t\tif (typeof window.setTheme === 'function') {\n\t\t\t\twindow.setTheme(theme);\n\t\t\t\tupdateThemeButtons();\n\t\t\t} else {\n\t\t\t\tconsole.error('Global setTheme function not available');\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tfunction updateThemeButtons() {\n\t\t\tconst lightBtn = document.getElementById('theme-light');\n\t\t\tconst darkBtn = document.getElementById('theme-dark');\n\t\t\t\n\t\t\t// Safety checks - buttons might not exist yet\n\t\t\tif (!lightBtn || !darkBtn) {\n\t\t\t\tconsole.warn('Theme buttons not found, retrying...');\n\t\t\t\tsetTimeout(updateThemeButtons, 100);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst isDark = document.documentElement.classList.contains('dark');\n\t\t\t\n\t\t\t// Reset all button classes first\n\t\t\tconst baseClasses = 'flex items-center px-4 py-2 rounded-lg border-2 transition-all duration-200';\n\t\t\tlightBtn.className = baseClasses;\n\t\t\tdarkBtn.className = baseClasses;\n\t\t\t\n\t\t\tif (isDark) {\n\t\t\t\t// Dark mode is active - highlight dark button with green accent\n\t\t\t\tdarkBtn.classList.add('border-green-500', 'bg-green-50', 'dark:bg-green-900/20', 'text-green-700', 'dark:text-green-400');\n\t\t\t\tlightBtn.classList.add('border-gray-300', 'dark:border-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');\n\t\t\t} else {\n\t\t\t\t// Light mode is active - highlight light button with green accent\n\t\t\t\tlightBtn.classList.add('border-green-500', 'bg-green-50', 'dark:bg-green-900/20', 'text-green-700', 'dark:text-green-400');\n\t\t\t\tdarkBtn.classList.add('border-gray-300', 'dark:border-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-700', 'text-gray-700', 'dark:text-gray-300');\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
