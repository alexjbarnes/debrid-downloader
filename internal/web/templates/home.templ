package templates

import "debrid-downloader/pkg/models"

templ Home(downloads []*models.Download, suggestedDir string) {
	<div class="space-y-6">
		<!-- Download Form Section -->
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
			<h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">Add New Download</h2>
			
			<form 
				hx-post="/download" 
				hx-target="#result"
				hx-indicator="#submit-button"
				hx-on="htmx:afterRequest: if(event.detail.successful) { /* form reset handled server-side via out-of-band swaps */ }"
				class="space-y-6"
			>
				<!-- URL Input -->
				<div>
					<label for="url" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
						<span id="url-label">File URL</span>
					</label>
					<!-- Single URL Input (default) -->
					<input 
						type="url" 
						id="url-single" 
						name="url" 
						required
						placeholder="https://example.com/file.zip"
						class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 transition-colors"
						hx-post="/api/directory-suggestion"
						hx-trigger="keyup changed delay:500ms, paste delay:500ms"
						hx-target="#directory-suggestion-response"
						hx-include="this"
						hx-indicator="#directory-suggestion-indicator"
					/>
					<!-- Multi URL Textarea (hidden by default) -->
					<textarea 
						id="url-multi" 
						name="urls" 
						rows="6"
						placeholder="Enter multiple URLs (one per line or space-separated):&#10;https://example.com/file1.zip&#10;https://example.com/file2.zip&#10;https://example.com/file3.zip"
						class="hidden w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 transition-colors resize-vertical"
						hx-post="/api/directory-suggestion"
						hx-trigger="keyup changed delay:500ms, paste delay:500ms"
						hx-target="#directory-suggestion-response"
						hx-include="this"
						hx-indicator="#directory-suggestion-indicator"
					></textarea>
				</div>

				<!-- Multi-file Mode Toggle -->
				<div class="flex items-center space-x-3">
					<input 
						type="checkbox" 
						id="multifile-mode" 
						name="multifile-mode"
						onchange="toggleMultiFileMode()"
						class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700"
					/>
					<label for="multifile-mode" class="text-sm font-medium text-gray-700 dark:text-gray-300">
						Multi-file download mode
					</label>
				</div>

				<!-- Directory Selection -->
				<div>
					<label for="directory" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
						Download Directory
					</label>
					<div class="space-y-2 relative">
						<!-- Hidden input for form submission -->
						<input type="hidden" id="directory" name="directory" value={ suggestedDir } />
						
						<!-- Directory picker button -->
						<button 
							type="button"
							id="directory-picker-btn"
							onclick="toggleDirectoryPicker()"
							class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-left transition-colors flex items-start justify-between hover:bg-gray-50 dark:hover:bg-gray-600 min-h-[48px]"
						>
							<span id="selected-directory" class="break-all overflow-wrap-anywhere flex-1 pr-2 leading-relaxed">{ suggestedDir }</span>
							<svg class="w-5 h-5 text-gray-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
							</svg>
						</button>
						
						<!-- Directory suggestion loading indicator -->
						<div id="directory-suggestion-indicator" class="htmx-indicator absolute right-3 top-3 pointer-events-none">
							<svg class="animate-spin h-4 w-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
								<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
								<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
							</svg>
						</div>
						
						<!-- Hidden target for directory suggestion response -->
						<div id="directory-suggestion-response" class="hidden"></div>
						
						<!-- Directory picker modal overlay -->
						<div id="directory-picker-overlay" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
							<div id="directory-picker" class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-xl w-full max-w-2xl max-h-[80vh] flex flex-col">
							<!-- Modal header -->
							<div class="px-4 py-3 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between">
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Select Directory</h3>
								<button 
									type="button"
									onclick="hideDirectoryPicker()"
									class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300"
								>
									<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
									</svg>
								</button>
							</div>
							
							<!-- Breadcrumb navigation -->
							<div id="breadcrumb-nav" class="px-4 py-2 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700">
								<div class="flex items-center space-x-2 text-sm">
									<!-- Breadcrumbs will be populated here -->
								</div>
							</div>
							
							<!-- Directory listing -->
							<div class="flex-1 overflow-y-auto">
								<div id="directory-list">
									<!-- Directory items will be populated here -->
								</div>
							</div>
							
							<!-- Footer with action buttons -->
							<div class="border-t border-gray-200 dark:border-gray-700 p-4 bg-gray-50 dark:bg-gray-700">
								<!-- New folder input (hidden by default) -->
								<div id="new-folder-input" class="hidden mb-3">
									<div class="flex flex-col sm:flex-row items-stretch sm:items-center gap-2">
										<input 
											type="text" 
											id="new-folder-name" 
											placeholder="Enter folder name"
											class="flex-1 px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-800 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400"
											onkeypress="if(event.key === 'Enter') createNewFolder()"
										/>
										<div class="flex gap-2">
											<button 
												type="button"
												onclick="createNewFolder()"
												class="flex-1 sm:flex-none px-4 py-2 text-sm bg-green-600 hover:bg-green-700 text-white rounded transition-colors whitespace-nowrap"
											>
												Create
											</button>
											<button 
												type="button"
												onclick="cancelNewFolder()"
												class="flex-1 sm:flex-none px-4 py-2 text-sm bg-gray-500 hover:bg-gray-600 text-white rounded transition-colors whitespace-nowrap"
											>
												Cancel
											</button>
										</div>
									</div>
								</div>
								
								<!-- Main action buttons -->
								<div class="flex items-center justify-between gap-2">
									<button 
										type="button"
										onclick="showNewFolderInput()"
										class="px-3 sm:px-4 py-2 text-sm bg-gray-600 hover:bg-gray-700 text-white rounded transition-colors whitespace-nowrap"
									>
										New Folder
									</button>
									<button 
										type="button"
										onclick="selectCurrentDirectory()"
										class="px-4 sm:px-6 py-2 text-sm bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors font-medium whitespace-nowrap"
									>
										Select This Folder
									</button>
								</div>
							</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Submit Button -->
				<div class="flex justify-center">
					<button 
						id="submit-button"
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-medium text-base py-2.5 px-8 rounded-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 relative min-w-[160px]"
					>
						<span class="htmx-indicator absolute inset-0 flex items-center justify-center bg-blue-600 rounded-lg">
							<svg class="animate-spin h-4 w-4 text-white mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
								<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
								<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
							</svg>
							Processing...
						</span>
						<span class="htmx-indicator-none">Add Download</span>
					</button>
				</div>
			</form>

			<!-- Result Area -->
			<div id="result" class="mt-6"></div>
		</div>

		<!-- Downloads History Section -->
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
			<div class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4 mb-6">
				<h2 class="text-2xl font-semibold text-gray-900 dark:text-white">Download History</h2>
				
				<!-- Search and Filter -->
				<div class="flex flex-col sm:flex-row gap-4">
					<form id="search-form" class="flex flex-col sm:flex-row gap-4">
						<input 
							type="text" 
							placeholder="Search downloads..."
							class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 transition-colors"
							hx-post="/downloads/search"
							hx-target="#downloads-list"
							hx-trigger="keyup changed delay:300ms, change from:#status-filter"
							hx-include="#search-form"
							name="search"
							id="search-input"
						/>
						
						<div class="relative flex flex-col">
							<div class="flex justify-end mb-1">
								<span 
									class="text-xs text-blue-500 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 cursor-pointer"
									onclick="selectAllStatuses()"
								>
									Select All
								</span>
							</div>
							<select 
								class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-colors w-full"
								hx-post="/downloads/search"
								hx-target="#downloads-list"
								hx-trigger="change"
								hx-include="#search-form"
								name="status"
								id="status-filter"
								multiple
								size="6"
								style="min-width: 200px;"
							>
								<option value="pending">Pending</option>
								<option value="downloading">Downloading</option>
								<option value="completed">Completed</option>
								<option value="failed">Failed</option>
								<option value="paused">Paused</option>
							</select>
						</div>
						
						<input type="hidden" name="sort" id="sort-order" value="desc" />
					</form>
					
					<!-- Sort Toggle Button -->
					<button
						type="button"
						class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 focus:ring-2 focus:ring-blue-500 focus:outline-none bg-white dark:bg-gray-700 text-gray-900 dark:text-white transition-all flex items-center gap-2"
						onclick="toggleSort()"
					>
						<span id="sort-icon">↓</span>
						<span id="sort-text">Newest First</span>
					</button>
				</div>
			</div>
			
			<script>
				// Load saved selections on page load
				document.addEventListener('DOMContentLoaded', function() {
					loadSavedSelections();
				});
				
				function toggleSort() {
					const sortInput = document.getElementById('sort-order');
					const sortIcon = document.getElementById('sort-icon');
					const sortText = document.getElementById('sort-text');
					
					if (sortInput.value === 'desc') {
						sortInput.value = 'asc';
						sortIcon.textContent = '↑';
						sortText.textContent = 'Oldest First';
					} else {
						sortInput.value = 'desc';
						sortIcon.textContent = '↓';
						sortText.textContent = 'Newest First';
					}
					
					// Save sort order
					localStorage.setItem('debrid-sort-order', sortInput.value);
					
					// Trigger the search with new sort order
					// Use the downloads list element to trigger search with current form data
					htmx.ajax('POST', '/downloads/search', {
						source: '#search-form',
						target: '#downloads-list',
						swap: 'innerHTML'
					});
				}
				
				function selectAllStatuses() {
					const statusFilter = document.getElementById('status-filter');
					const options = statusFilter.options;
					for (let i = 0; i < options.length; i++) {
						options[i].selected = true;
					}
					// Save selections
					saveStatusSelections();
					// Trigger the search with all statuses selected
					htmx.trigger('#status-filter', 'change');
				}
				
				function saveStatusSelections() {
					const statusFilter = document.getElementById('status-filter');
					const selectedValues = Array.from(statusFilter.selectedOptions).map(option => option.value);
					localStorage.setItem('debrid-selected-statuses', JSON.stringify(selectedValues));
				}
				
				function loadSavedSelections() {
					// Load saved statuses
					const savedStatuses = localStorage.getItem('debrid-selected-statuses');
					if (savedStatuses) {
						try {
							const selectedValues = JSON.parse(savedStatuses);
							const statusFilter = document.getElementById('status-filter');
							
							// Clear all selections first
							for (let i = 0; i < statusFilter.options.length; i++) {
								statusFilter.options[i].selected = false;
							}
							
							// Set saved selections
							selectedValues.forEach(value => {
								const option = statusFilter.querySelector(`option[value="${value}"]`);
								if (option) {
									option.selected = true;
								}
							});
							
							// Trigger search with loaded selections
							if (selectedValues.length > 0) {
								htmx.trigger('#status-filter', 'change');
							}
						} catch (e) {
							console.warn('Failed to load saved status selections:', e);
						}
					}
					
					// Load saved sort order
					const savedSort = localStorage.getItem('debrid-sort-order');
					if (savedSort) {
						const sortInput = document.getElementById('sort-order');
						const sortIcon = document.getElementById('sort-icon');
						const sortText = document.getElementById('sort-text');
						
						sortInput.value = savedSort;
						if (savedSort === 'asc') {
							sortIcon.textContent = '↑';
							sortText.textContent = 'Oldest First';
						} else {
							sortIcon.textContent = '↓';
							sortText.textContent = 'Newest First';
						}
					}
				}
				
				// Save selections when status filter changes
				document.getElementById('status-filter').addEventListener('change', function() {
					saveStatusSelections();
				});
			</script>

			<!-- Downloads List -->
			<div id="downloads-list" class="space-y-4" 
				hx-post="/downloads/search" 
				hx-trigger="load, refresh"
				hx-include="#search-form"
				hx-swap="innerHTML">
				@DownloadsList(downloads)
			</div>
			
			<!-- Hidden polling trigger that gets updated via out-of-band swaps -->
			<div id="polling-trigger" style="display: none;"></div>
		</div>
	</div>
}